1. Can Basil be used outside the web-portal, in a stand-alone environment?
- Yes, Basil can be used in a stand-alone environment. It needs Docker, Python and Snyk to function in the command-line mode. We will update this FAQs page with the link to the Docker image containing all the dependencies for using Basil in a stand-alone environment.

2. How does Basil work?
- Basil takes the specifications for building your code and generates an intermediate YAML file that is then used to generate a Dockerfile, which in turn is used to create a Docker image.

3. Will Singularity image generation be supported?
- Yes, Basil will support Singularity image generation in the near future. There will be regular updates in the future, the updates we are currently working on are listed on the iSpec page.

4. How do I provide the source code?
- You would need to upload the files and folders required for building your code and creating a Docker image by clicking the upload button on the "Terminal" or "iSpec" tabs after logging in.

5. Why do I need icompute when I already have Docker installed on my system?
- icompute can be useful if you would like to build Docker images but do not know how to write a Dockerfile. In this case, you may be having Docker installed on your computer but may not be able to use for building the image unless you learn how to write a Dockerfile

6. I do not want to use any program as root on my system, can I still use icompute for generating Docker images?
- "sudo" permissions are needed for building Docker images. If you do not have "sudo" permissions on a system, you will not be able to build the images there. In this case, one can come to icompute.us and build the image. Addiitonally, they can push the images to DockerHub and add an appropriate license if needed using icompute. The image can then be pulled from DockerHub and run on the desired systems, either directly or by converting to Singularity image files. This method bypasses having to use root mode on HPC or work systems where working through root mode might not be feasible.

7. I would like to package my software with a license, should I do that seperately?
- Basil allows one to add a license to their Docker image once they are done building their Docker image as an added option. If selected, the Docker image is packaged along with the license they picked regardless of whether the image was pushed to Docker Hub or not.

8. How will I recieve the Docker image once built?
- There are two main ways to recieve your Docker image once submitted for building. One can either push it to a Docker Hub account by providing the username and access token, or they can simply choose to get an email with a link to download the image as a TAR package.

9. What kind of base images can I use?
- Basil provides a set of base images that have been thoroughly vetted by the team and confirmed to work perfectly with the software. In the future we'll be adding more base images as well as a functionality for the user's to simply type in the base image that they want.

10. I have a use case for my software that is pretty complicated to build a Dockerfile for and that method is not covered under the Video Demos tab.
- If you require any assistance on how to go about building a Dockerfile for your software, feel free to reach out to the team at Basil through the Contact Us page. We will continue to add more use case scenarios videos under the Video Demos page as well so please keep an eye on it.

11. Why are there 2 ways to copy files in the iSpec form, what is the difference between them?
- Basil uses 2 functionalities for copying files as they are associated with 2 seperate commands in a Dockerfile. 'Copy files from directory to image' refers to the COPY command of a Dockerfile and 'Advanced Copy' refers to the ADD command. COPY only supports the basic copying of local files into the container, while ADD has some features (like local-only tar extraction and remote URL support) that are not immediately obvious. Consequently, the best use for ADD is local tar file auto-extraction into the image, as in ADD rootfs.tar.xz / .
